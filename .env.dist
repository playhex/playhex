NODE_ENV=development
PORT=3000

# Mysql database
DATABASE_URL="mysql://root:root@localhost:3306/hex"

# Set "true" to log in the terminal all sql sent to database
DATABASE_SHOW_SQL=false

# Log queries taking more than N millisecnds with typeorm.
# "Maximum number of milliseconds query should be executed before logger log a warning."
DATABASE_SHOW_SLOW_QUERIES=

##
# For dev, all following settings can be let as default value.
##

# Must match base url from where the app will be serve.
# - no trailing stash
# - don't forget httpS if any
BASE_URL=http://localhost:3000

# Text to display in header, after site title.
# I.e: "PlayHex - beta"
SITE_TITLE_SUFFIX=

# Set "true" to prevent search engine bots to index the application.
# Useful when hosting a public beta version.
BLOCK_ROBOTS_INDEX=

# Express session
# List of secrets, newest on first, separated by a comma, like "newest,oldest"
SESSION_SECRET=CHANGE_ME
# Whether cookies must be https only. Should be true in production.
SESSION_HTTPS_ONLY=false

# Redis. Should be kept optional for dev environment.
# Used for session storage, and database caching.
# Example: REDIS_URL=redis://localhost:6379
REDIS_URL=
REDIS_PREFIX=hex

# Used as API token for administration routes /api/admin/...
# Set one, then pass it to request header as Authorization: Bearer ADMIN_PASSWORD
# If empty, admin routes are not allowed.
ADMIN_PASSWORD=

# Hex AI distributed API.
# If not set, Random bot will still be available.
# Example: https://localhost:8088
HEX_AI_API=

# Whether we allow playing ranked games vs AI.
# Warning: Must be true when running integration tests with cypress.
ALLOW_RANKED_BOT_GAMES=true

# Random bot: wait time, in milliseconds, before doing a random move.
# Warning: Must be 0 when running integration tests with cypress.
# For test pruposes. Examples:
# RANDOM_BOT_WAIT_BEFORE_PLAY=1000 # wait one second
# RANDOM_BOT_WAIT_BEFORE_PLAY=400-1000 # randomly wait between 400ms and 1000ms
RANDOM_BOT_WAIT_BEFORE_PLAY=0

# Whether to fetch contributors from Github and Weblate when going to contributors page.
# false by default to prevent querying these services in development.
FETCH_CONTRIBUTORS=false

# Auto cancel stale games.
# Prevent accumulate open games on lobby that does not play and keep forever.
# To enable, set "true"
AUTO_CANCEL_STALE_GAMES=

# Prevents crash when Fischer clock reach 24.8 days (cannot pass milliseconds to setTimeout).
# Value must be less than 2^31.
# Effect is that in correspondence games, clock won't be more than this value after time increment.
GAME_CLOCK_SYSTEM_MAX_TIME=1814400000 # 3 weeks

# When "true", won't bundle some large libraries, but will use CDN instead (e.g bootstrap)
USE_CDN=

# Push notifications
# Generate VAPID keys with:
#   yarn web-push generate-vapid-keys
PUSH_VAPID_PUBLIC_KEY=
PUSH_VAPID_PRIVATE_KEY=
PUSH_VAPID_EMAIL=

# Matomo https://matomo.org/
# website id is a number, e.g 1
# src is matomo instance hostname following this format: "matomo.playhex.org"
MATOMO_WEBSITE_ID=
MATOMO_SRC=

# Socket.io admin UI to see rooms, sockets, events...
# Interface: https://admin.socket.io/#/
# Documentation: https://socket.io/docs/v4/admin-ui/
# Warning: Admin UI should not be used while this issue is not fixed: https://github.com/socketio/socket.io-admin-ui/issues/75
#          It crashes the app when a socket connect without session (no Cookie header).
# enabled: 'true' or 'false'
SOCKET_IO_ADMIN_UI_ENABLED=
# Optional user and pass. Pass is bcrypt hashed. Generate one at https://bcrypt-generator.com/
SOCKET_IO_ADMIN_UI_USER=
SOCKET_IO_ADMIN_UI_PASS=

# Sentry
# browser, sending errors and replays
# Get it from https://XXXXX.sentry.io/settings/projects/hex-js/loader-script/
# Example: SENTRY_LOADER_SCRIPT='<script src="https://js.sentry-cdn.com/xxxxxxx.min.js" crossorigin="anonymous"></script>'
SENTRY_LOADER_SCRIPT=
# webpack, sending source map on build
SENTRY_AUTH_TOKEN=
SENTRY_ORG=
SENTRY_PROJECT=

# Sentry error logging
# Make warning, errors and crash logs sent to Sentry.
# To enable, set SENTRY_DSN.
# Example:
#   SENTRY_SERVER_DSN="https://8ad3...45f@...sentry.io/123..."
#   SENTRY_SERVER_LOG_LEVEL=notice
#   SENTRY_SERVER_NAME=hex-server
#   SENTRY_SERVER_SAMPLE_RATE="0.5"
SENTRY_SERVER_DSN=
SENTRY_SERVER_LOG_LEVEL=
SENTRY_SERVER_NAME=hex-server
SENTRY_SERVER_SAMPLE_RATE="1.0"

# InfluxDB, monitoring metrics.
# Either a local instance of influxdb (then create dashboard), or cloud influx + cloud grafana
# Example:                  (all 3 must be set in order to enable monitoring)
#   HOST="https://eu-central-1-1.aws.cloud2.influxdata.com"
#   TOKEN="vyid-s4nzG..."   (token must have write bucket access)
#   DATABASE=hex            (bucket name)
INFLUX_HOST=
INFLUX_TOKEN=
INFLUX_DATABASE=

# https://swaggerstats.io/
# Allows to monitor api endpoints.
# Empty: disabled
# "no_password": enabled
# other: enabled with "admin" / *password*
SWAGGER_STATS_PASSWORD=
